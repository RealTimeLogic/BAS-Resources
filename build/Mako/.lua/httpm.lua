local a=require"http"local b=string.format;local function c(d)return string.gsub(d,"([^A-Za-z0-9_])",function(e)return string.format("%%%02x",string.byte(e))end)end;local function f(self,g,h)local i,j,k,l;h.header=h.header or{}h.header["x-requested-with"]="XMLHttpRequest"if h.method=="POST"then h.header["Content-Type"]="application/x-www-form-urlencoded"local m={}local n=table.insert;for o,p in pairs(g)do n(m,b("%s=%s",c(o),c(p)))end;g=table.concat(m,"&")h.size=#g;i,j,k,l=self:request(h)if i then i,j,k,l=self:write(g)end else h.method="GET"h.query=self:mkop(h.query,g)i,j,k,l=self:request(h)end;if i then local d;d,j,k,l=self:status()if d then g,j,k,l=self:read"*a"if g then return d,g end end end;return nil,j,k,l end;local q=setmetatable({},{__index=a.getmetatable()})function q:post(r,s,h)self.op.query=nil;h=self:mkop(self:mkop({method="POST"},h))h.url=r;return f(self,s,h)end;function q:json(r,s,h)self.op.query=nil;h=self:mkop(self:mkop({method="GET"},h))h.url=r;local t,j,k,l=f(self,s,h)if t==200 then if#j>0 then s,k=ba.json.decode(j,h.jnull and true or false)if s then return s end;return nil,"json",k end;return nil,"invalidresponse","Response empty"end;return nil,j,k,l end;local function u(self)local v={}for o,p in pairs(self:header())do v[o:lower()]=p end;local w={}local x=v["last-modified"]if not x then x=v["expires"]end;w.mtime=x and ba.parsedate(x)x=v["content-length"]w.size=x and tonumber(x)return w end;function q:stat(r,h)self.op.query=nil;h=self:mkop(self:mkop({method="HEAD"},h))h.url=r;local i,j,k,l=self:request(h)if i then local d;d,j,k,l=self:status()if d==200 then return u(self)end;if d then return nil,d end end;return nil,j,k,l end;local function y(z,A,B)if not z then error("Required attribute: "..A,B or 4)end end;local function C(self,D,h,E,F)local i,G,H,size,I,j,k,l;self.op.query=nil;h=self:mkop(self:mkop({method=E,url=D.url},h))y(h.url,"URL")if D.io and D.name then if F then H,j,k,l=D.io:stat(D.name)if H then size=H.size;I,j,k,l=D.io:open(D.name)end else I,j,k,l=D.io:open(D.name,"w")end;if not I then return nil,j,k,l end else y(D.fp,"(io and name) or fp")I=D.fp end;G=D.func or function()end;h.size=size or D.size or h.size;i,j,k,l=self:request(h)if i then return true,I,G,size end;return nil,j,k,l end;function q:upload(D,h)local g,j,k,l;local J=0;local i,I,G,size=C(self,D,h,"PUT",true)if not i then return nil,I,G,size end;if not size and D.size then size=D.size end;while true do g,j,k,l=I:read(1024)if not g then break end;J=J+#g;g,j,k,l=self:write(g)if j then break end;G(size,J)end;I:close()if j then return nil,j,k,l end;return true end;function q:download(D,h)local g,j,k,l;local K=0;local i,I,G=C(self,D,h,"GET",false)if not i then return nil,I,G,size end;i,j,k,l=self:status()if i~=200 then if i then return nil,i end;return nil,j,k,l end;local size=u(self).size;while true do g,j,k,l=self:read(1024)if j or not g or#g==0 then break end;i,j,k,l=I:write(g)if j then break end;K=K+#g;G(size,K)end;I:close()if j then return nil,j,k,l end;return true end;local L={}function L.create(h)local v=a.create(h)return setmetatable(v,{__index=q})end;return L