local a=require"soap"local b,c=string.match,string.lower;local function d(e)local f=ba.openio("vm")local g,h=f:loadfile(e)if not g then error("failed to load soap services : "..h)end;return g end;local function i(j,k)local l=setmetatable({soap_shared=j.userspace,print=trace,response=false},{__index=k})local m,h=pcall(j.serviceloader(l))if not m then return nil,"failed to parse soap config :"..(h or"unspecified error")end;local n=l.soap_services;if not n or type(n)~="table"then return nil,j.config.." defines no soap services"end;return n end;local function o(j,response,p,q)response:setcontenttype("text/xml; charset=\"utf-8\"")lifetime=j.wsdl_life or 300;local r=os.time()+lifetime;response:setmaxage(lifetime)response:setdateheader("Expires",r)response:setdateheader("Last-Modified",j.starttime)response:setheader("Age",0)response:setstatus(p)for s,t in ipairs(q)do response:write(t)end;return true end;local function u(j,response,p,q,lifetime)response:setcontenttype("text/xml; charset=\"utf-8\"")local v=j.rpc_life;if v and(not lifetime or v<lifetime)then lifetime=v else lifetime=lifetime or 5 end;local r=os.time()+lifetime;response:setmaxage(lifetime)response:setdateheader("Expires",r)response:setdateheader("Last-Modified",os.time())response:setheader("Age",0)response:setstatus(p)response:write(q)return true end;local function w(response,p,h)trace("SOAP ERROR",h)response:senderror(p,h)return end;local function x(y,z,A,B)local j={serviceloader=z,cache=setmetatable({src},{__mode="v"}),userspace={},starttime=os.time(),wsdl_life=A,rpc_life=B}return function(C,D)if D==""then return false end;local E,F=b(D,"^(.+)%.([^%.]+)$")E,F=E or D,F or"wsdl"local G=c(E)if F=="rpc"then if not request:allow{"PUT","POST"}then return false end;G=c(D)elseif F=="wsdl"then if not request:allow{"GET"}then return false end;request:checktime(j.starttime)local H=j.cache[G]if H then return o(j,response,200,H)end else return false end;local I,h=i(j,C)if not I then return w(response,500,h)end;local J,K;repeat K,J=E,rawget(I,E)if J then break end;K,J=G,rawget(I,G)if J then break end;for L,M in pairs(I)do if G==c(L)then K,J=L,M;break end end;if not J then return false end until true;if type(J)~="table"then return w(response,500,D.."is not a soap operation")end;print=trace;require"soap"a.default_tns="http://www.barracuda-server.com/lsoap/default/"local m,h=a.check_handlers(J)if not m then return w(response,500,"error in soap config :"..h)end;if F=="wsdl"then local N=b(request:url(),"^(.+)%/[^%/]+$")if not N then return false end;local m,h=a.build_wsdl_t(J,K,N.."/"..K)if not m then return w(response,500,"error in soap config :"..h)end;j.cache[G]=m;return o(j,response,200,m)end;local p,O,q,P=a.handle_rpc_request(request:rawrdr(),J)if p~=200 then P=0;trace("SOAP ERROR",O)if not q then response.senderror(response,p,O)return false end end;return u(j,response,p,q,P)end,j end;ba.create.soapdir=function(y,z,A,B)if type(y)~="string"then error("Directory name is not a string")end;if type(z)=="string"then z=d(z)elseif type(z)~="function"then error("service loader is not a function")end;local Q,R=x(y,z,A,B)local S=ba.create.dir(y)S:setfunc(Q)return S,R end