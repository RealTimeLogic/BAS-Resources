local a=ba.json;local b,c=string.format,string.match;local d,e=table.concat,table.insert;local assert,error,type,pairs,ipairs,next,pcall,setmetatable=assert,error,type,pairs,ipairs,next,pcall,setmetatable;local f,g=table.unpack,ba.deflate;local h={}local function i(j,k,l)if type(j)==k then return end;error(b("%s expected a %s, not a %s.",l or"",k,type(j)),3)end;local function m(n)local o={}local p=n:rawrdr()for q in p do o[#o+1]=q end;return d(o)end;local r={__index={}}function r.__index:execute(n,s)assert(n)assert(s)self.request=n;self.response=s;local t,u=pcall(m,n)if t then if u then u=a.decode(u)if u and u.method then local v,w=c(u.method,"([%w_]+)%.([%w_]+)")if v and w then local x=self.intf[v]if x then local y=x[w]if y then local z,A,B;t,z,A,B=pcall(y,f(u.params or{}))if t and z~=nil then local C={version="1.1",result=z}self:sendResp(C)elseif t then if type(A)=="number"then self:sendError(A,B)else self:sendError(0,b("No response from %s",u.method))end else self:sendError(0,b("%s: %s",u.method,z))end else self:sendError(0,b("Cannot find method: %s",u.method))end else if u.method=="system.describe"then self:doSystemDescribe()else self:sendError(0,b("Cannot find RPC object: %s",x))end end else self:sendError(0,b("%s not a valid method name.",u.method))end else self:sendError(0,"JSON parse error")end else self:sendError(0,"Expected JSON RPC data")end else self:sendError(0,"Read error: "..u)end end;function r.__index:doSystemDescribe()assert(self.request)local D={}for v,x in pairs(self.intf)do for w,E in pairs(x)do e(D,b("%s.%s",v,w))end end;local C={sdversion="1.0",name=self.name,id=self.request:url(),procs=D}self:sendResp(C)end;function r.__index:sendError(F,l)local C={version="1.1",error={name="JSONRPCError",code=F,message=l}}self:sendResp(C)end;function r.__index:sendResp(G)local H=self.request;local I=self.response;local J=a.encode(G)I:reset()if#J>1400 then local K=H:header("Accept-Encoding")if K and K:find("deflate")then I:setheader("Content-Encoding","deflate")J=g(J)end end;I:setcontenttype("application/json")I:setheader("Cache-Control","no-store, no-cache, must-revalidate")I:setheader("Content-Length",#J)I:send(J)end;new=function(L,x)i(x,"table","Argument: ")local M=0;for N,O in pairs(x)do M=M+1;i(O,"table",N..": ")local P=0;for E,p in next,O do i(p,"function",N..": ")P=P+1 end;assert(P~=0,b("Table '%s' is empty",N))end;assert(M~=0,"Interface table is empty")return setmetatable({intf=x,name=L},r)end;return h